/*
 * Copyright (c) 2018-Present Pivotal Software Inc, All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *       https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

configure(rootProject) { project ->
	apply plugin: "maven-publish"
	apply plugin: "com.jfrog.artifactory"

	ext {
		isReleaseVersion = version.endsWith("RELEASE")
			isMilestoneVersion = version.matches('[0-9].[0-9].[0-9].M[0-9]+') || version.matches('[0-9].[0-9].[0-9].RC[0-9]+')
		isSnapshotVersion = !(isReleaseVersion || isMilestoneVersion)

		resolveVersion = { String version ->
			if (isMilestoneVersion) {
			return 'milestone'
			}
			if (isReleaseVersion) {
			return 'release'
			}
			return 'snapshot'
		}
		artifactoryRepo = "libs-${resolveVersion(project.version)}-local"
		logger.lifecycle("For project [$project.name] with version [$project.version] the resolved Artifactory repo is [$artifactoryRepo]")
	}

  	//the sourcesJar and javadocJar tasks must be defined before publications in order to be publishable
	task sourcesJar(type: Jar) {
		archiveClassifier.set('sources')
		from sourceSets.main.allSource
	}

	task javadocJar(type: Jar) {
		archiveClassifier.set('javadoc')
		from javadoc
	}

	publishing {
		publications {
			mavenJava(MavenPublication) {
				from components.java
				artifact sourcesJar
				artifact javadocJar

				pom {
					afterEvaluate {
						name = 'Reactor Pool'
						description = project.description
					}
					url = 'https://github.com/reactor/reactor-pool'
						organization {
						name = 'reactor'
						url = 'https://github.com/reactor'
					}
					licenses {
						license {
							name = 'The Apache Software License, Version 2.0'
							url = 'https://www.apache.org/licenses/LICENSE-2.0.txt'
							distribution = 'repo'
						}
					}
					scm {
						url = 'https://github.com/reactor/reactor-pool'
						connection = 'scm:git:git://github.com/reactor/reactor-pool'
						developerConnection = 'scm:git:git://github.com/reactor/reactor-pool'
					}
					developers {
						developer {
							id = 'smaldini'
							name = 'Stephane Maldini'
							email = 'smaldini@pivotal.io'
						}
						developer {
							id = 'simonbasle'
							name = 'Simon Basl√©'
							email = 'sbasle@pivotal.io'
						}
						developer {
							id = 'violetagg'
							name = 'Violeta Georgieva'
							email = 'vgeorgieva@pivotal.io'
						}
					}
					issueManagement {
						system = "GitHub Issues"
						url = "https://github.com/reactor/reactor-pool/issues"
					}
				}
			}
		}
	}

	artifactory {
		publish {
			contextUrl = 'https://repo.spring.io'
			repository {
				repoKey = "${artifactoryRepo}"

				//it might be that Artifactory Bamboo plugin passes credentials differently, so assume defaults if -P is not used
				if (project.findProperty("artifactoryUsername") != null && project.findProperty("artifactoryPassword") != null) {
					logger.lifecycle("Artifactory credentials passed via project properties")
					username = "${artifactoryUsername}"
					password = "${artifactoryPassword}"
				}
			}
			defaults {
				publications(publishing.publications.mavenJava)
			}
		}
	}
}